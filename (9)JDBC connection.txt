import java.sql.*; 

public class conjdbc { 
    
    public static void main(String[] args) { 
        
        String createTableSQL = "CREATE TABLE EM12(ENO NUMBER(6), NAME VARCHAR2(25), BPAY NUMBER(10,2))"; 
        
        // JDBC Connection variables are declared null initially
        Connection connection = null;
        Statement statement = null;

        try { 
            // 1. Load the JDBC Driver class for Oracle
            Class.forName("oracle.jdbc.driver.OracleDriver"); 
            
            // 2. Establish the connection
            // NOTE: The username and password used here are placeholders ("root", "root") 
            // and must be replaced with your actual Oracle database credentials.
            connection = DriverManager.getConnection(
                "jdbc:oracle:thin:@localhost:1521:xe", 
                "root", 
                "root"
            ); 
            
            if (connection != null) {
                System.out.println("Connected successfully to Oracle database.");
            }
            
            // 3. Create a Statement object and execute the SQL
            statement = connection.createStatement(); 
            int rowsAffected = statement.executeUpdate(createTableSQL); 
            
            System.out.println("Table EM12 created successfully.");
            
        } 
        catch (ClassNotFoundException e) { 
            // This catches errors if the Oracle Driver class cannot be found
            System.out.println("ERROR: Oracle JDBC Driver not found. " + e.getMessage()); 
        } 
        catch (SQLException ex) { 
            // This catches all database-related errors (e.g., connection failure, invalid SQL)
            System.out.println("SQL EXCEPTION: " + ex.getMessage()); 
        }
        finally {
            // 4. Close the statement and connection in a finally block to ensure they are closed
            try {
                if (statement != null) statement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                System.out.println("Error closing resources: " + e.getMessage());
            }
        }
    }
}
